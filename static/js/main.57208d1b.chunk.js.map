{"version":3,"sources":["components/Infobox.js","components/InfoTable.js","components/Sort.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Infobox","useState","cases","active","class","role","recovered","deaths","total","countryData","setCountryData","Sort","data","caseType","sortedData","sort","a","b","country","new","useEffect","getAllCountries","fetch","method","headers","then","response","json","catch","err","console","error","countriesList","parseInt","slice","sortedCountriesData","filter","countryObj","worldWideData","log","className","id","Infotable","SNo","newCases","Navbar","href","src","alt","height","App","countriesData","setCountriesData","handleSort","e","sortedList","target","value","type","onClick","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57208d1b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Infobox.css';\r\n\r\n\r\nfunction Infobox()\r\n{\r\n    const [countryData, setCountryData] = useState({\r\n        cases: {\r\n            active:<div class=\"spinner-border text-primary\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </div>,\r\n            recovered: <div class=\"spinner-border text-primary\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </div>,\r\n        },\r\n        deaths: {\r\n            total: <div class=\"spinner-border text-primary\" role=\"status\">\r\n            <span class=\"visually-hidden\">Loading...</span>\r\n          </div>,\r\n        },\r\n    });\r\n\r\n    //This is used for Sorting the Data\r\n    const Sort = (data,caseType=\"new\") => {\r\n        let sortedData = [...data];\r\n    \r\n        if(caseType===\"country\"){\r\n            sortedData.sort((a, b) => a.country<b.country ? -1 : 1);\r\n        }\r\n        else if(caseType===\"new\"){\r\n            sortedData.sort((a, b) => a.cases.new>b.cases.new ? -1 : 1);\r\n        }\r\n        else if(caseType===\"active\"){\r\n            sortedData.sort((a, b) => a.cases.active>b.cases.active ? -1 : 1);\r\n        }\r\n        else if(caseType===\"deaths\"){\r\n            sortedData.sort((a, b) => a.deaths.total>b.deaths.total ? -1 : 1);\r\n        }\r\n        else if(caseType===\"recovered\"){\r\n            sortedData.sort((a, b) => a.cases.recovered>b.cases.recovered ? -1 : 1);\r\n        }\r\n        return sortedData;\r\n      };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getAllCountries = async () => {\r\n            const countriesList = await fetch(\r\n                \"https://covid-193.p.rapidapi.com/statistics\",\r\n                {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                        \"x-rapidapi-key\":\r\n                            \"34880edaa3mshe862cfb3a401212p1d7722jsn58fd9ac0425a\",\r\n                    },\r\n                }\r\n            )\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => data.response)\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                });\r\n            for(let country of countriesList){\r\n                if(country.cases.new == null){\r\n                    country.cases.new = \"+0\";\r\n                }\r\n                country.cases.new = parseInt(country.cases.new.slice(1))\r\n            }\r\n\r\n            const sortedCountriesData = Sort(countriesList);\r\n            const [worldWideData] = sortedCountriesData.filter((countryObj) => {\r\n                return countryObj.country === \"All\";\r\n            });\r\n            console.log(worldWideData);\r\n            setCountryData(worldWideData);\r\n    \r\n        };\r\n        getAllCountries();\r\n    }, []);\r\n    \r\n\r\n\r\n    \r\n    return (\r\n        <div className=\"infoBoxcontent\">\r\n            \r\n        <div className=\"infoBoxone\">\r\n        <div class=\"shadow p-3 mb-5 bg-body rounded\">\r\n            <h2 id=\"infotitle\"> Active Cases</h2>\r\n            <h2 className=\"infodata\" id=\"active\">{countryData.cases.active}</h2>\r\n            </div>\r\n        </div>\r\n\r\n        \r\n        <div className=\"infoBoxtwo\">\r\n        <div class=\"shadow p-3 mb-5 bg-body rounded\">\r\n            <h2 id=\"infotitle\">Recovered Cases</h2>\r\n            <h2 className=\"infodata\" id=\"recover\">{countryData.cases.recovered}</h2>\r\n            </div>\r\n        </div>\r\n        \r\n            <div className=\"infoBoxthree\">\r\n            <div class=\"shadow p-3 mb-5 bg-body rounded\">\r\n            <h2 id=\"infotitle\">Death Cases</h2>\r\n            <h2 className=\"infodata\" id=\"death\">{countryData.deaths.total}</h2>\r\n                    \r\n        </div> \r\n            \r\n        </div>\r\n\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default Infobox","import React from 'react'\r\n\r\nfunction Infotable({SNo,country,newCases,active,recovered,deaths}) {\r\n    return (\r\n        <tr>\r\n            <td className=\"serialColumn\" class=\"fixsno\">{SNo}</td>\r\n            <td class=\"tofix\">{country}</td>\r\n            <td id=\"newcases\" class=\"tofix\">+{newCases}</td>\r\n            <td class=\"tofix\" id=\"recovered\">{recovered}</td>\r\n            <td class=\"tofix\">{active}</td>\r\n            <td class=\"tofix\">{deaths}</td>\r\n            \r\n            </tr>\r\n        \r\n            \r\n    )\r\n}\r\n\r\nexport default Infotable","export const Sort = (data,caseType=\"new\") => {\r\n    let sortedData = [...data];\r\n\r\n    if(caseType===\"country\"){\r\n        sortedData.sort((a, b) => a.country<b.country ? -1 : 1);\r\n    }\r\n    else if(caseType===\"new\"){\r\n        sortedData.sort((a, b) => a.cases.new>b.cases.new ? -1 : 1);\r\n    }\r\n    else if(caseType===\"active\"){\r\n        sortedData.sort((a, b) => a.cases.active>b.cases.active ? -1 : 1);\r\n    }\r\n    else if(caseType===\"deaths\"){\r\n        sortedData.sort((a, b) => a.deaths.total>b.deaths.total ? -1 : 1);\r\n    }\r\n    else if(caseType===\"recovered\"){\r\n        sortedData.sort((a, b) => a.cases.recovered>b.cases.recovered ? -1 : 1);\r\n    }\r\n    return sortedData;\r\n  };","import React from 'react'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div>\r\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-info\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" href=\"#\">\r\n    <img id=\"logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Wikiproject_COVID-19_-_logo.svg/1200px-Wikiproject_COVID-19_-_logo.svg.png\" alt=\"...\" height=\"40\" />\r\n              <span id=\"logoname\"> Covid-19 Tracker </span>\r\n            </a>\r\n    {/*<button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\">Link</a>\r\n        </li>\r\n        <li class=\"nav-item dropdown\">\r\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\r\n            <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n            <li><hr class=\"dropdown-divider\" /></li>\r\n            <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link disabled\">Disabled</a>\r\n        </li>\r\n    </ul>*/}\r\n                        {/*<form class=\"d-flex\">\r\n        <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n    </form>*/}\r\n    </div>\r\n  \r\n</nav>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar","import \"./App.css\";\nimport'./components/InfoTable.css'\nimport { useState, useEffect } from \"react\";\nimport Infobox from \"./components/Infobox\";\nimport Infotable from \"./components/InfoTable\";\nimport {Sort} from \"./components/Sort\";\nimport Navbar from \"./components/Navbar\"\n\n\nfunction App() {\n    const [countriesData, setCountriesData] = useState([]);\n\n    useEffect(() => {\n        const getAllCountries = async () => {\n            const countriesList = await fetch(\n                \"https://covid-193.p.rapidapi.com/statistics\",\n                {\n                    method: \"GET\",\n                    headers: {\n                        \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\n                        \"x-rapidapi-key\":\n                            \"34880edaa3mshe862cfb3a401212p1d7722jsn58fd9ac0425a\",\n                    },\n                }\n            )\n                .then((response) => {\n                    return response.json();\n                })\n                .then((data) => data.response)\n                .catch((err) => {\n                    console.error(err);\n                });\n            for(let country of countriesList){\n                if(country.cases.new == null){\n                    country.cases.new = \"+0\";\n                }\n                country.cases.new = parseInt(country.cases.new.slice(1))\n            }\n\n            const sortedCountriesData = Sort(countriesList);\n            setCountriesData(sortedCountriesData);\n           \n        };\n        getAllCountries();\n    },[]);\n\n\n    const handleSort = function(e){\n        const sortedList = Sort(countriesData,e.target.value)\n        setCountriesData(sortedList);\n    }\n\n    return (\n\n        <div className=\"App\">\n    \n            <Navbar />\n            \n\n            <div className=\"InfoboxWrapper\">\n                <Infobox/>\n            </div>\n\n\n            <div className=\"allbtn\">\n            <h3 id=\"sorttitle\"> Sort By:- </h3>\n            <div className=\"btn\">\n                \n                <button type=\"button\" id=\"btnone\" class=\"btn btn-info\" onClick={handleSort} value=\"country\">Country Name</button>\n                <button type=\"button\" id=\"btnone\" class=\"btn btn-info\" onClick={handleSort} value=\"new\">New Cases</button>\n                <button type=\"button\" id=\"btnone\" class=\"btn btn-info\" onClick={handleSort} value=\"recovered\">Recovered Cases</button>\n                <button type=\"button\" id=\"btnfour\" class=\"btn btn-info\" onClick={handleSort} value=\"active\">Active Cases</button>\n                <button type=\"button\" id=\"btnfive\" class=\"btn btn-info\" onClick={handleSort} value=\"deaths\">Total Deaths</button>\n                </div>\n                </div>\n\n            <div className=\"tableData\">\n                <table className=\"table\">\n               \n                <tr>\n                    <td >S.No</td>\n                    <td>Country</td>\n                    <td>New Cases</td>\n                    <td>Recovered Cases</td>\n                    <td>Active Cases</td>\n                    <td>Total Deaths</td>\n                </tr>\n\n                {countriesData.map((country, index) => {\n                    return (\n                        <Infotable\n                            SNo={index + 1}\n                            country={country.country}\n                            newCases={country.cases.new != null ? country.cases.new : \"+0\"}\n                            active={country.cases.active}\n                            recovered={country.cases.recovered}\n                            deaths={country.deaths.total}\n                        />\n                    );\n                })}\n                </table>\n            </div>\n            \n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}