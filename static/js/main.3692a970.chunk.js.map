{"version":3,"sources":["components/Infobox.js","components/InfoTable.js","components/Sort.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Infobox","useState","cases","active","recovered","deaths","total","countryData","setCountryData","Sort","data","caseType","sortedData","sort","a","b","country","new","useEffect","getAllCountries","fetch","method","headers","then","response","json","catch","err","console","error","countriesList","parseInt","slice","sortedCountriesData","filter","countryObj","worldWideData","log","className","id","Infotable","SNo","newCases","Navbar","class","href","type","role","App","countriesData","setCountriesData","handleSort","e","sortedList","target","value","onClick","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3692a970.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Infobox.css';\r\n\r\nfunction Infobox()\r\n{\r\n    const [countryData, setCountryData] = useState({\r\n        cases: {\r\n            active: \"Loading\",\r\n            recovered: \"Loading\",\r\n        },\r\n        deaths: {\r\n            total: \"Loading\",\r\n        },\r\n    });\r\n\r\n    //This is used for Sorting the Data\r\n    const Sort = (data,caseType=\"new\") => {\r\n        let sortedData = [...data];\r\n    \r\n        if(caseType===\"country\"){\r\n            sortedData.sort((a, b) => a.country<b.country ? -1 : 1);\r\n        }\r\n        else if(caseType===\"new\"){\r\n            sortedData.sort((a, b) => a.cases.new>b.cases.new ? -1 : 1);\r\n        }\r\n        else if(caseType===\"active\"){\r\n            sortedData.sort((a, b) => a.cases.active>b.cases.active ? -1 : 1);\r\n        }\r\n        else if(caseType===\"deaths\"){\r\n            sortedData.sort((a, b) => a.deaths.total>b.deaths.total ? -1 : 1);\r\n        }\r\n        else if(caseType===\"recovered\"){\r\n            sortedData.sort((a, b) => a.cases.recovered>b.cases.recovered ? -1 : 1);\r\n        }\r\n        return sortedData;\r\n      };\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        const getAllCountries = async () => {\r\n            const countriesList = await fetch(\r\n                \"https://covid-193.p.rapidapi.com/statistics\",\r\n                {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n                        \"x-rapidapi-key\":\r\n                            \"34880edaa3mshe862cfb3a401212p1d7722jsn58fd9ac0425a\",\r\n                    },\r\n                }\r\n            )\r\n                .then((response) => {\r\n                    return response.json();\r\n                })\r\n                .then((data) => data.response)\r\n                .catch((err) => {\r\n                    console.error(err);\r\n                });\r\n            for(let country of countriesList){\r\n                if(country.cases.new == null){\r\n                    country.cases.new = \"+0\";\r\n                }\r\n                country.cases.new = parseInt(country.cases.new.slice(1))\r\n            }\r\n\r\n            const sortedCountriesData = Sort(countriesList);\r\n            const [worldWideData] = sortedCountriesData.filter((countryObj) => {\r\n                return countryObj.country === \"All\";\r\n            });\r\n            console.log(worldWideData);\r\n            setCountryData(worldWideData);\r\n    \r\n        };\r\n        getAllCountries();\r\n    }, []);\r\n    \r\n\r\n\r\n    \r\n    return (\r\n        <div className=\"infoBoxcontent\">\r\n        <div className=\"infoBoxone\">\r\n            <h1 id=\"infotitle\"> Active Cases</h1>\r\n            <h2 id=\"infodata\">{countryData.cases.active}</h2>\r\n            \r\n        </div>\r\n            \r\n        <div className=\"infoBoxtwo\">\r\n            <h1 id=\"infotitle\">Recovered</h1>\r\n            <h2 id=\"infodata\">{countryData.cases.recovered}</h2>\r\n           \r\n        </div>\r\n            \r\n        <div className=\"infoBoxthree\">\r\n            <h1 id=\"infotitle\">Deaths</h1>\r\n            <h2 id=\"infodata\">{countryData.deaths.total}</h2>\r\n            \r\n            \r\n        </div>\r\n\r\n        </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default Infobox","import React from 'react'\r\n\r\nfunction Infotable({SNo,country,newCases,active,recovered,deaths}) {\r\n    return (\r\n        <tr>\r\n            <td>{SNo}</td>\r\n            <td>{country}</td>\r\n            <td>{newCases}</td>\r\n            <td>{active}</td>\r\n            <td>{recovered}</td>\r\n            <td>{deaths}</td>\r\n            \r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Infotable","export const Sort = (data,caseType=\"new\") => {\r\n    let sortedData = [...data];\r\n\r\n    if(caseType===\"country\"){\r\n        sortedData.sort((a, b) => a.country<b.country ? -1 : 1);\r\n    }\r\n    else if(caseType===\"new\"){\r\n        sortedData.sort((a, b) => a.cases.new>b.cases.new ? -1 : 1);\r\n    }\r\n    else if(caseType===\"active\"){\r\n        sortedData.sort((a, b) => a.cases.active>b.cases.active ? -1 : 1);\r\n    }\r\n    else if(caseType===\"deaths\"){\r\n        sortedData.sort((a, b) => a.deaths.total>b.deaths.total ? -1 : 1);\r\n    }\r\n    else if(caseType===\"recovered\"){\r\n        sortedData.sort((a, b) => a.cases.recovered>b.cases.recovered ? -1 : 1);\r\n    }\r\n    return sortedData;\r\n  };","import React from 'react'\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <div>\r\n            <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" href=\"#\">Covid-19 Tracker</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"#\">Link</a>\r\n        </li>\r\n        <li class=\"nav-item dropdown\">\r\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n            <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\r\n            <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n            <li><hr class=\"dropdown-divider\" /></li>\r\n            <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n          </ul>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link disabled\">Disabled</a>\r\n        </li>\r\n      </ul>\r\n                        {/*<form class=\"d-flex\">\r\n        <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n        <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n    </form>*/}\r\n    </div>\r\n  </div>\r\n</nav>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar","import \"./App.css\";\nimport'./components/InfoTable.css'\nimport { useState, useEffect } from \"react\";\nimport Infobox from \"./components/Infobox\";\nimport Infotable from \"./components/InfoTable\";\nimport {Sort} from \"./components/Sort\";\nimport Navbar from \"./components/Navbar\"\n\n\nfunction App() {\n    const [countriesData, setCountriesData] = useState([]);\n\n    useEffect(() => {\n        const getAllCountries = async () => {\n            const countriesList = await fetch(\n                \"https://covid-193.p.rapidapi.com/statistics\",\n                {\n                    method: \"GET\",\n                    headers: {\n                        \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\n                        \"x-rapidapi-key\":\n                            \"34880edaa3mshe862cfb3a401212p1d7722jsn58fd9ac0425a\",\n                    },\n                }\n            )\n                .then((response) => {\n                    return response.json();\n                })\n                .then((data) => data.response)\n                .catch((err) => {\n                    console.error(err);\n                });\n            for(let country of countriesList){\n                if(country.cases.new == null){\n                    country.cases.new = \"+0\";\n                }\n                country.cases.new = parseInt(country.cases.new.slice(1))\n            }\n\n            const sortedCountriesData = Sort(countriesList);\n            setCountriesData(sortedCountriesData);\n           \n        };\n        getAllCountries();\n    },[]);\n\n\n    const handleSort = function(e){\n        const sortedList = Sort(countriesData,e.target.value)\n        setCountriesData(sortedList);\n    }\n\n    return (\n        <div className=\"App\">\n           \n            <Navbar />\n            \n\n            <div className=\"InfoboxWrapper\">\n                <Infobox/>\n            </div>\n\n\n            <h3> Sort By:- </h3>\n            <div className=\"btn\">\n                \n                <button type=\"button\" class=\"btn btn-info\" onClick={handleSort} value=\"country\">Country Name</button>\n                <button type=\"button\" class=\"btn btn-info\" onClick={handleSort} value=\"new\">New Cases</button>\n                <button type=\"button\" class=\"btn btn-info\" onClick={handleSort} value=\"active\">Active Cases</button>\n                <button type=\"button\" class=\"btn btn-info\" onClick={handleSort} value=\"recovered\">Recovered Cases</button>\n                <button type=\"button\" class=\"btn btn-info\" onClick={handleSort} value=\"deaths\">Total Deaths</button>\n            </div>\n\n            <div className=\"tableData\">\n               \n                <tr>\n                    <td >S.No</td>\n                    <td>Country</td>\n                    <td>New Cases</td>\n                    <td>Active Cases</td>\n                    <td>Recovered Cases</td>\n                    <td>Total Deaths</td>\n                </tr>\n\n                {countriesData.map((country, index) => {\n                    return (\n                        <Infotable\n                            SNo={index + 1}\n                            country={country.country}\n                            newCases={country.cases.new != null ? country.cases.new : \"+0\"}\n                            active={country.cases.active}\n                            recovered={country.cases.recovered}\n                            deaths={country.deaths.total}\n                        />\n                    );\n                })}\n            </div>\n            \n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}